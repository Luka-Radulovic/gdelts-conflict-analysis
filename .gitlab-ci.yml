default:
  tags:
    - docker-executor

stages:
  - static-analysis
  - test
  - build

flake8:
  image: "python:3.12"
  before_script:
    - pip install --upgrade pip
    - python --version ; pip --version
    - pip install poetry
    - export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
    - poetry install
    - source `poetry env info --path`/bin/activate
  stage: static-analysis
  script:
    - flake8 src/.
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

black:
  image: "python:3.12"
  before_script:
    - pip install --upgrade pip
    - python --version ; pip --version
    - pip install poetry
    - export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
    - poetry install
    - source `poetry env info --path`/bin/activate
  stage: static-analysis
  script:
    - black --check .
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

isort:
  image: "python:3.12"
  before_script:
    - pip install --upgrade pip
    - python --version ; pip --version
    - pip install poetry
    - export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
    - poetry install
    - source `poetry env info --path`/bin/activate
  stage: static-analysis
  script:
    - isort . --check-only
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

mypy:
  image: "python:3.12"
  before_script:
    - pip install --upgrade pip
    - python --version ; pip --version
    - pip install poetry
    - export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
    - poetry install
    - source `poetry env info --path`/bin/activate
  stage: static-analysis
  script:
    - mypy
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

pytest:
  image: "python:3.12"
  before_script:
    - pip install --upgrade pip
    - python --version ; pip --version
    - pip install poetry
    - export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
    - poetry install
    - source `poetry env info --path`/bin/activate
  stage: test
  script:
    - pytest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build-fastapi:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $HARBOR_USER_NAME -p $HARBOR_SECRET https://docker.codechem.com/
  stage: build
  script:
    - docker build . -t gdelt-api:latest -f deploy/Dockerfile.api   
    - docker tag gdelt-api:latest docker.codechem.com/gdelt-streamlit/backend:$CI_COMMIT_REF_SLUG
    - docker push docker.codechem.com/gdelt-streamlit/backend:$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build-streamlit:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $HARBOR_USER_NAME -p $HARBOR_SECRET https://docker.codechem.com/
  stage: build
  script:
    - docker build . -t gdelt-frontend:latest -f deploy/Dockerfile.frontend   
    - docker tag gdelt-frontend:latest docker.codechem.com/gdelt-streamlit/frontend:$CI_COMMIT_REF_SLUG
    - docker push docker.codechem.com/gdelt-streamlit/frontend:$CI_COMMIT_REF_SLUG
  rules:
  - if: $CI_COMMIT_TAG
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH